{"version":3,"file":"static/js/151.219457b8.chunk.js","mappings":"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","sources":["Actions/cartaction.js","Actions/productaction.js","Components/Layout/Metadata.js","Components/Loading/Loading.js","Components/Product/ReviewCard.js","Components/Product/ProductDetails.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { ADD_TO_CART, REMOVE_CART_ITEM, SAVE_SHIPPING_INFO } from \"../Constants/cartconstants\";\r\n\r\nexport const addItemsToCart = (id, quantity) => async (dispatch,getstate) => {\r\n  const {data} = await axios.get(`/api/v1/product/${id}`);\r\n\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      productid: data.product._id,\r\n      name: data.product.Name,\r\n      price: data.product.Price,\r\n      image: data.product.Images[0].url,\r\n      stock: data.product.Stock,\r\n      quantity,\r\n    }\r\n  });\r\n  \r\n  localStorage.setItem('Cart',JSON.stringify(getstate().cart.cartItems))\r\n\r\n};\r\n\r\nexport const removeItemsFromCart = (id)=>async (dispatch,getstate)=>{\r\n  dispatch({\r\n    type:REMOVE_CART_ITEM,\r\n    payload:id\r\n  })\r\n  localStorage.setItem('Cart',JSON.stringify(getstate().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingInfo = (data)=>async(dispatch)=>{\r\n  dispatch({\r\n    type:SAVE_SHIPPING_INFO,\r\n    payload:data,\r\n  })\r\n  localStorage.setItem('ShippingInfo',JSON.stringify(data))\r\n}","import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCT_FAIL,\r\n  ALL_PRODUCT_REQUEST,\r\n  ALL_PRODUCT_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_FAIL,\r\n  ALL_REVIEW_REQUEST,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../Constants/productconstants\";\r\n\r\n// All Products\r\nexport const getallproducts =\r\n  (keyword = \"\", currentPage = 1, price = [0, 200000], category, ratings = 0) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCT_REQUEST });\r\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&Price[gte]=${price[0]}&Price[lte]=${price[1]}&Ratings[gte]=${ratings}`;\r\n      \r\n      if (category) {\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&Price[gte]=${price[0]}&Price[lte]=${price[1]}&Category=${category}&Ratings[gte]=${ratings}`;\r\n      }\r\n      const { data } = await axios.get(link);\r\n      // console.log(data)\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n// Product Details\r\nexport const getproductdetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/product/${id}`);\r\n    // console.log(data)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// NEW REVIEW\r\nexport const newReview = (id, reviewData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    const { data } = await axios.put(`/api/v1/product/${id}/review`, reviewData, config);\r\n\r\n    dispatch({\r\n      type: NEW_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Reviews of a Product\r\nexport const getAllReviews = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\r\n\r\n    dispatch({\r\n      type: ALL_REVIEW_SUCCESS,\r\n      payload: data.reviews,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Review of a Product\r\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/v1/reviews?id=${reviewId}&productId=${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Get All Products For Admin\r\nexport const getAdminProduct = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ADMIN_PRODUCT_REQUEST });\r\n  \r\n      const { data } = await axios.get(\"/api/v1/admin/products\");\r\n      // console.log(data)\r\n  \r\n      dispatch({\r\n        type: ADMIN_PRODUCT_SUCCESS,\r\n        payload: data.products,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ADMIN_PRODUCT_FAIL,\r\n        payload: 'error.response.data.message',\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Create Product\r\n  export const createProduct = (productData) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: NEW_PRODUCT_REQUEST });\r\n  \r\n      const config = {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/v1/admin/product/new`,\r\n        productData,\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: NEW_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: NEW_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Update Product\r\n  export const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n  \r\n      const config = {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/v1/admin/product/${id}`,\r\n        productData,\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: UPDATE_PRODUCT_SUCCESS,\r\n        payload: data.success,\r\n      });\r\n    } catch (error) {\r\n      // console.log(error.response)\r\n      dispatch({\r\n        type: UPDATE_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Delete Product\r\n  export const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n  \r\n      const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\r\n  \r\n      dispatch({\r\n        type: DELETE_PRODUCT_SUCCESS,\r\n        payload: data.success,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import Helmet from 'react-helmet'\r\n\r\nconst Metadata = ({title}) => {\r\n  return (<>\r\n      <Helmet>\r\n          <title>{title}</title>\r\n      </Helmet>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Metadata","import './Loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className='load1'>\r\n                <div className='load2'></div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import { Rating } from \"@material-ui/lab\";\r\nconst profilePng = \"https://ik.imagekit.io/shera/Images/tr:w-200,f-auto/Profile.png\";\r\n\r\nconst ReviewCard = ({ review }) => {\r\n  const options = {\r\n    value: review.Rating,\r\n    readOnly: true,\r\n    precision: 0.5,\r\n  };\r\n\r\n  return (\r\n    <div className=\"reviewCard\">\r\n      <img src={profilePng} alt=\"User\" />\r\n      <p>{review.Name}</p>\r\n      <Rating {...options} />\r\n      <span className=\"reviewCardComment\">{review.Comment}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewCard;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport \"./ProductDetails.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  getproductdetails,\r\n  newReview,\r\n} from \"../../Actions/productaction\";\r\nimport ReviewCard from \"./ReviewCard.js\";\r\nimport Loader from \"../Loading/Loading\";\r\nimport { useAlert } from \"react-alert\";\r\nimport MetaData from \"../Layout/Metadata\";\r\nimport { addItemsToCart } from \"../../Actions/cartaction\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { NEW_REVIEW_RESET } from \"../../Constants/productconstants\";\r\n\r\nconst ProductDetails = ({ match,history }) => {\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert();\r\n\r\n  const { product, loading, error } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  const { success, error: reviewError } = useSelector(\r\n    (state) => state.newReview\r\n  );\r\n  const { isAuthenticated, user } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const options = {\r\n    size: \"large\",\r\n    value: product.Ratings,\r\n    readOnly: true,\r\n    precision: 0.5,\r\n  };  \r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [open, setOpen] = useState(false)\r\n  const [rating, setRating] = useState();\r\n  const [comment, setComment] = useState();\r\n\r\n  const increaseQuantity = () => {\r\n    if (product.Stock <= quantity) return;\r\n\r\n    const qty = quantity + 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const decreaseQuantity = () => {\r\n    if (1 >= quantity) return;\r\n\r\n    const qty = quantity - 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addItemsToCart(match.params.id, quantity));\r\n    alert.success(\"Item Added To Cart\");\r\n  };\r\n\r\n  const submitReviewToggle = () => {\r\n    open ? setOpen(false) : setOpen(true);\r\n  };\r\n  const CloseReviewToggle = () => {\r\n    open ? setOpen(false) : setOpen(true);\r\n    if(isreviewed){\r\n      setRating(isreviewed.Rating)\r\n      setComment(isreviewed.Comment)\r\n    }else{\r\n      setRating(undefined)\r\n      setComment(undefined)\r\n    }\r\n  };\r\n  const reviewSubmitHandler = () => {\r\n    const myForm = {\r\n      Rating:rating,\r\n      Comment:comment\r\n    }\r\n    if (!isAuthenticated) {\r\n      history.push(`/login?redirect=${window.location.pathname}`)\r\n    }\r\n    dispatch(newReview(match.params.id,myForm));\r\n\r\n    setOpen(false);\r\n  };\r\n  \r\n  const isreviewed = product.Reviews && user && product.Reviews.find(elem => elem.User === user._id)\r\n  \r\n  useEffect(() => {\r\n    \r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    \r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Review Submitted Successfully\");\r\n      dispatch({ type: NEW_REVIEW_RESET });\r\n    }\r\n    dispatch(getproductdetails(match.params.id));\r\n\r\n  }, [dispatch, match.params.id, error, alert, reviewError, success]);\r\n\r\n  useEffect(() => {\r\n    if(isreviewed){\r\n      setRating(isreviewed.Rating)\r\n      setComment(isreviewed.Comment)\r\n    }else{\r\n      setRating(undefined)\r\n      setComment(undefined)\r\n    }\r\n  }, [dispatch, isreviewed])\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={`${product.Name} -- ECOMMERCE`} />\r\n          <div className=\"ProductDetails\">\r\n            <div>\r\n              <Carousel>\r\n                {product.Images &&\r\n                  product.Images.map((item, i) => (\r\n                    <img\r\n                      className=\"CarouselImage\"\r\n                      key={i}\r\n                      src={item.url}\r\n                      alt={`${i} Slide`}\r\n                    />\r\n                  ))}\r\n              </Carousel>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"detailsBlock-1\">\r\n                <h2>{product.Name}</h2>\r\n                <p>Product # {product._id}</p>\r\n              </div>\r\n              <div className=\"detailsBlock-2\">\r\n                <Rating {...options} />\r\n                <span className=\"detailsBlock-2-span\">\r\n                  {\" \"}\r\n                  ({product.NumofReviews} Reviews)\r\n                </span>\r\n              </div>\r\n              <div className=\"detailsBlock-3\">\r\n                <h1>{`₹${product.Price}`}</h1>\r\n                <div className=\"detailsBlock-3-1\">\r\n                  <div className=\"detailsBlock-3-1-1\">\r\n                    <button onClick={decreaseQuantity}>-</button>\r\n                    <input readOnly type=\"number\" value={quantity} />\r\n                    <button onClick={increaseQuantity}>+</button>\r\n                  </div>\r\n                  <button\r\n                    disabled={product.Stock < 1 ? true : false}\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    Add to Cart\r\n                  </button>\r\n                </div>\r\n\r\n                <p>\r\n                  Status:\r\n                  <b className={product.Stock < 1 ? \"redColor\" : \"greenColor\"}>\r\n                    {product.Stock < 1 ? \"OutOfStock\" : \"InStock\"}\r\n                  </b>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"detailsBlock-4\">\r\n                Description : <p>{product.Description}</p>\r\n              </div>\r\n\r\n              <button onClick={submitReviewToggle} className=\"submitReview\">\r\n                Submit Review\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"reviewsHeading\">REVIEWS</h3>\r\n\r\n          <Dialog\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            open={open}\r\n            onClose={submitReviewToggle}\r\n          >\r\n            <DialogTitle>Submit Review</DialogTitle>\r\n            <DialogContent className=\"submitDialog\">\r\n              <Rating\r\n                onChange={(e) => setRating(e.target.value)}\r\n                value={rating}\r\n                size=\"large\"\r\n              />\r\n\r\n              <textarea\r\n                className=\"submitDialogTextArea\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              ></textarea>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={CloseReviewToggle} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={reviewSubmitHandler} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {product.Reviews && product.Reviews[0] ? (\r\n            <div className=\"reviews\">\r\n              {product.Reviews &&\r\n                product.Reviews.map((review) => (\r\n                  <ReviewCard key={review._id} review={review} />\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"noReviews\">No Reviews Yet</p>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n"],"names":["addItemsToCart","id","quantity","dispatch","getstate","axios","data","type","ADD_TO_CART","payload","productid","product","_id","name","Name","price","Price","image","Images","url","stock","Stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","getallproducts","keyword","currentPage","category","ratings","ALL_PRODUCT_REQUEST","link","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","response","message","getproductdetails","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","newReview","reviewData","NEW_REVIEW_REQUEST","config","headers","NEW_REVIEW_SUCCESS","success","NEW_REVIEW_FAIL","getAllReviews","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","reviews","ALL_REVIEW_FAIL","deleteReviews","reviewId","productId","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","getAdminProduct","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","products","ADMIN_PRODUCT_FAIL","createProduct","productData","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","updateProduct","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","deleteProduct","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","clearErrors","CLEAR_ERRORS","title","className","review","options","value","Rating","readOnly","precision","src","alt","Comment","match","history","useDispatch","alert","useAlert","useSelector","state","productDetails","loading","error","reviewError","user","isAuthenticated","size","Ratings","useState","setQuantity","open","setOpen","rating","setRating","comment","setComment","submitReviewToggle","isreviewed","Reviews","find","elem","User","useEffect","NEW_REVIEW_RESET","params","undefined","Fragment","map","item","i","NumofReviews","onClick","disabled","Description","Dialog","onClose","DialogTitle","DialogContent","onChange","e","target","cols","rows","DialogActions","Button","color","myForm","push","window","location","pathname"],"sourceRoot":""}