{"version":3,"file":"static/js/296.f83eb9ef.chunk.js","mappings":"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","sources":["Actions/cartaction.js","Components/Cart/CheckoutSteps.js","Components/Cart/Shipping.js","Components/Layout/Metadata.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { ADD_TO_CART, REMOVE_CART_ITEM, SAVE_SHIPPING_INFO } from \"../Constants/cartconstants\";\r\n\r\nexport const addItemsToCart = (id, quantity) => async (dispatch,getstate) => {\r\n  const {data} = await axios.get(`/api/v1/product/${id}`);\r\n\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      productid: data.product._id,\r\n      name: data.product.Name,\r\n      price: data.product.Price,\r\n      image: data.product.Images[0].url,\r\n      stock: data.product.Stock,\r\n      quantity,\r\n    }\r\n  });\r\n  \r\n  localStorage.setItem('Cart',JSON.stringify(getstate().cart.cartItems))\r\n\r\n};\r\n\r\nexport const removeItemsFromCart = (id)=>async (dispatch,getstate)=>{\r\n  dispatch({\r\n    type:REMOVE_CART_ITEM,\r\n    payload:id\r\n  })\r\n  localStorage.setItem('Cart',JSON.stringify(getstate().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingInfo = (data)=>async(dispatch)=>{\r\n  dispatch({\r\n    type:SAVE_SHIPPING_INFO,\r\n    payload:data,\r\n  })\r\n  localStorage.setItem('ShippingInfo',JSON.stringify(data))\r\n}","import { Fragment } from \"react\";\r\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport \"./CheckoutSteps.css\";\r\n\r\nconst CheckoutSteps = ({ activeStep }) => {\r\n  const steps = [\r\n    {\r\n      label: <Typography>Shipping Details</Typography>,\r\n      icon: <LocalShippingIcon />,\r\n    },\r\n    {\r\n      label: <Typography>Confirm Order</Typography>,\r\n      icon: <LibraryAddCheckIcon />,\r\n    },\r\n    {\r\n      label: <Typography>Payment</Typography>,\r\n      icon: <AccountBalanceIcon />,\r\n    },\r\n  ];\r\n\r\n  const stepStyles = {\r\n    boxSizing: \"border-box\",\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\r\n        {steps.map((item, index) => (\r\n          <Step\r\n            key={index}\r\n            active={activeStep === index ? true : false}\r\n            completed={activeStep >= index ? true : false}\r\n          >\r\n            <StepLabel\r\n              style={{\r\n                color: activeStep >= index ? \"tomato\" : \"rgba(0, 0, 0, 0.649)\",\r\n              }}\r\n              icon={item.icon}\r\n            >\r\n              {item.label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import { Fragment, useState } from \"react\";\r\nimport \"./Shipping.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveShippingInfo } from \"../../Actions/cartaction\";\r\nimport MetaData from \"../Layout/Metadata\";\r\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport TransferWithinAStationIcon from \"@material-ui/icons/TransferWithinAStation\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport { useAlert } from \"react-alert\";\r\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\r\n\r\nconst Shipping = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n\r\n  const [address, setAddress] = useState(shippingInfo.address);\r\n  const [city, setCity] = useState(shippingInfo.city);\r\n  const [state, setState] = useState(shippingInfo.state);\r\n  const [country, setCountry] = useState(shippingInfo.country);\r\n  const [pinCode, setPinCode] = useState(shippingInfo.pinCode);\r\n  const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\r\n\r\n  const shippingSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (phoneNo.length < 10 || phoneNo.length > 10) {\r\n      alert.error(\"Phone Number should be 10 digits Long\");\r\n      return;\r\n    }\r\n    dispatch(\r\n      saveShippingInfo({ address, city, state, country, pinCode, phoneNo })\r\n    );\r\n    history.push(\"/order/confirm\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Shipping Details\" />\r\n\r\n      <CheckoutSteps activeStep={0} />\r\n\r\n      <div className=\"shippingContainer\">\r\n        <div className=\"shippingBox\">\r\n          <h2 className=\"shippingHeading\">Shipping Details</h2>\r\n\r\n          <form\r\n            className=\"shippingForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={shippingSubmit}\r\n          >\r\n            <div>\r\n              <HomeIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Address\"\r\n                required\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <LocationCityIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                required\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <PinDropIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Pin Code\"\r\n                required\r\n                value={pinCode}\r\n                onChange={(e) => setPinCode(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <PhoneIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Phone Number\"\r\n                required\r\n                value={phoneNo}\r\n                onChange={(e) => setPhoneNo(e.target.value)}\r\n                size=\"10\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <PublicIcon />\r\n\r\n              <select\r\n                required\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              >\r\n                <option value=\"\">Country</option>\r\n                {Country &&\r\n                  Country.getAllCountries().map((item) => (\r\n                    <option key={item.isoCode} value={item.isoCode}>\r\n                      {item.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            {country && (\r\n              <div>\r\n                <TransferWithinAStationIcon />\r\n\r\n                <select\r\n                  required\r\n                  value={state}\r\n                  onChange={(e) => setState(e.target.value)}\r\n                >\r\n                  <option value=\"\">State</option>\r\n                  {State &&\r\n                    State.getStatesOfCountry(country).map((item) => (\r\n                      <option key={item.isoCode} value={item.isoCode}>\r\n                        {item.name}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Continue\"\r\n              className=\"shippingBtn\"\r\n              disabled={state ? false : true}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","import Helmet from 'react-helmet'\r\n\r\nconst Metadata = ({title}) => {\r\n  return (<>\r\n      <Helmet>\r\n          <title>{title}</title>\r\n      </Helmet>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Metadata"],"names":["addItemsToCart","id","quantity","dispatch","getstate","axios","data","type","ADD_TO_CART","payload","productid","product","_id","name","Name","price","Price","image","Images","url","stock","Stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","activeStep","steps","label","Typography","icon","LocalShipping","LibraryAddCheck","AccountBalance","Fragment","Stepper","alternativeLabel","style","boxSizing","map","item","index","Step","active","completed","StepLabel","color","history","useDispatch","alert","useAlert","useSelector","state","shippingInfo","useState","address","setAddress","city","setCity","setState","country","setCountry","pinCode","setPinCode","phoneNo","setPhoneNo","title","CheckoutSteps","className","encType","onSubmit","e","preventDefault","length","error","push","Home","placeholder","required","value","onChange","target","LocationCity","PinDrop","Phone","size","Public","Country","isoCode","TransferWithinAStation","State","disabled"],"sourceRoot":""}