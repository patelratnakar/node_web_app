{"version":3,"file":"static/js/485.5285dff6.chunk.js","mappings":"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","sources":["Components/Layout/Metadata.js","Components/Loading/Loading.js","Components/User/Login_Register.js"],"sourcesContent":["import Helmet from 'react-helmet'\r\n\r\nconst Metadata = ({title}) => {\r\n  return (<>\r\n      <Helmet>\r\n          <title>{title}</title>\r\n      </Helmet>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Metadata","import './Loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className='load1'>\r\n                <div className='load2'></div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import { useRef, useEffect, useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  clearErrors,\r\n  loginuseraction,\r\n  registeruseraction,\r\n  registeruserotpaction,\r\n} from \"../../Actions/useraction\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Metadata from \"../Layout/Metadata\";\r\nimport \"./Login_Register.css\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {WaveLoading} from 'react-loadingg'\r\nconst PreviewAvatar = \"https://ik.imagekit.io/shera/Images/tr:w-200,f-auto/Profile.png\";\r\n\r\nfunction Login_Register() {\r\n  // const x = 'abc'\r\n  //   console.log(x.isEmail())\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAuthenticated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n  const {\r\n    loading: Otpload,\r\n    error: Otperror,\r\n    CodeSent,\r\n  } = useSelector((state) => state.otp);\r\n  const history = useHistory();\r\n\r\n  const loginTab = useRef(null);\r\n  const registerTab = useRef(null);\r\n  const switcherTab = useRef(null);\r\n\r\n  const switchTabs = (e, tab) => {\r\n    if (tab === \"login\") {\r\n      setmetadata(true);\r\n      switcherTab.current.classList.add(\"shiftToNeutral\");\r\n      switcherTab.current.classList.remove(\"shiftToRight\");\r\n\r\n      registerTab.current.classList.remove(\"shiftToNeutralForm\");\r\n      loginTab.current.classList.remove(\"shiftToLeft\");\r\n    }\r\n    if (tab === \"register\") {\r\n      setmetadata(false);\r\n      switcherTab.current.classList.add(\"shiftToRight\");\r\n      switcherTab.current.classList.remove(\"shiftToNeutral\");\r\n\r\n      registerTab.current.classList.add(\"shiftToNeutralForm\");\r\n      loginTab.current.classList.add(\"shiftToLeft\");\r\n    }\r\n  };\r\n\r\n  const [metadata, setmetadata] = useState(true);\r\n\r\n  const [logindata, setlogindata] = useState({\r\n    Email: \"\",\r\n    Password: \"\",\r\n  });\r\n\r\n  const logindatachange = (e) => {\r\n    const { name, value } = e.target;\r\n    // console.log(e.target.name)\r\n    setlogindata((state) => {\r\n      return {\r\n        ...state,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const loginbtn = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginuseraction(logindata));\r\n    if (isAuthenticated) {\r\n      alert.success(\"Logged In\");\r\n    }\r\n  };\r\n\r\n  const [registerdata, setregisterdata] = useState({\r\n    Name: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    CPassword: \"\",\r\n    Avatar: PreviewAvatar,\r\n    Code: \"\",\r\n  });\r\n\r\n  const registerdatachange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"Avatar\") {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setregisterdata((state) => {\r\n            return {\r\n              ...state,\r\n              [name]: reader.result,\r\n            };\r\n          });\r\n        }\r\n      };\r\n    } else {\r\n      setregisterdata((state) => {\r\n        return {\r\n          ...state,\r\n          [name]: value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dialogtoggle = () => {\r\n    open ? setOpen(false) : setOpen(true);\r\n  };\r\n\r\n  const registerotpbtn = (e) => {\r\n    e.preventDefault();\r\n    dispatch(registeruserotpaction(registerdata))\r\n  };\r\n  useEffect(() => {\r\n    if (!open && !CodeSent) {\r\n      setOpen(false);\r\n    }else{\r\n      setOpen(true)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [CodeSent, Otpload]);\r\n\r\n  const registerbtn = (e) => {\r\n    e.preventDefault();\r\n    dispatch(registeruseraction(registerdata));\r\n    if (isAuthenticated) {\r\n      alert.success(\"Logged In\");\r\n    }\r\n  };\r\n\r\n  const redirect = window.location.search\r\n    ? window.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (Otperror) {\r\n      alert.error(Otperror);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isAuthenticated) {\r\n      history.push(redirect);\r\n    }\r\n  }, [dispatch, error, alert, isAuthenticated, history, redirect, Otperror]);\r\n\r\n  return (\r\n    <>\r\n      {metadata ? (\r\n        <Metadata title=\"LOGIN | ECOMMERCE\" />\r\n      ) : (\r\n        <Metadata title=\"REGISTER | ECOMMERCE\" />\r\n      )}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <div className=\"LoginSignUpContainer\">\r\n            <div className=\"LoginSignUpBox\">\r\n              <div>\r\n                <div className=\"login_signUp_toggle\">\r\n                  <p onClick={(e) => switchTabs(e, \"login\")}>LOGIN</p>\r\n                  <p onClick={(e) => switchTabs(e, \"register\")}>REGISTER</p>\r\n                </div>\r\n                <button ref={switcherTab}></button>\r\n              </div>\r\n\r\n              {/* Login Form  */}\r\n              <form className=\"loginForm\" ref={loginTab} onSubmit={loginbtn}>\r\n                <div className=\"loginEmail\">\r\n                  <MailOutlineIcon />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"Email\"\r\n                    required\r\n                    onChange={logindatachange}\r\n                    value={logindata.Email}\r\n                  />\r\n                </div>\r\n                <div className=\"loginPassword\">\r\n                  <LockOpenIcon />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"Password\"\r\n                    required\r\n                    onChange={logindatachange}\r\n                  />\r\n                </div>\r\n                <Link to=\"/password/forgot\">Forget Password ?</Link>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"loginBtn\"\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </form>\r\n\r\n              {/* Register Form  */}\r\n              <form\r\n                className=\"signUpForm\"\r\n                ref={registerTab}\r\n                encType=\"multipart/form-data\"\r\n              >\r\n                <div className=\"signUpName\">\r\n                  <FaceIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    required\r\n                    name=\"Name\"\r\n                    value={registerdata.Name}\r\n                    onChange={registerdatachange}\r\n                        disabled={Otpload ? true : false}\r\n                  />\r\n                </div>\r\n                <div className=\"signUpEmail\">\r\n                  <MailOutlineIcon />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    name=\"Email\"\r\n                    onChange={registerdatachange}\r\n                    value={registerdata.Email}\r\n                        disabled={Otpload ? true : false}\r\n                  />\r\n                </div>\r\n                <div className=\"signUpPassword\">\r\n                  <LockOpenIcon />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    name=\"Password\"\r\n                    onChange={registerdatachange}\r\n                    value={registerdata.Password}\r\n                        disabled={Otpload ? true : false}\r\n                  />\r\n                </div>\r\n                <div className=\"signUpPassword\">\r\n                  <LockOpenIcon />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required\r\n                    name=\"CPassword\"\r\n                    onChange={registerdatachange}\r\n                    value={registerdata.CPassword}\r\n                        disabled={Otpload ? true : false}\r\n                  />\r\n                </div>\r\n\r\n                <div id=\"registerImage\">\r\n                  <img src={registerdata.Avatar} alt=\"Avatar Preview\" />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"Avatar\"\r\n                    accept=\"image/*\"\r\n                    onChange={registerdatachange}\r\n                        disabled={Otpload ? true : false}\r\n                  />\r\n                </div>\r\n                <Button\r\n                  className=\"signUpBtn\"\r\n                  onClick={registerotpbtn}\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  disabled={Otpload ? true : false}\r\n                >\r\n                  Register\r\n                </Button>\r\n                <Dialog\r\n                disableBackdropClick=\"true\"\r\n                disableEscapeKeyDown=\"true\"\r\n                  aria-labelledby=\"simple-dialog-title\"\r\n                  open={open}\r\n                  onClose={dialogtoggle}\r\n                >\r\n                  {/* {Otpload ? <Loading/> : <> */}\r\n                  <DialogTitle>Verify Code</DialogTitle>\r\n                  <DialogContent className=\"submitDialog\">\r\n                    <div className=\"signUpName\">\r\n                  {Otpload ? <span className=\"otpload\"> <WaveLoading size=\"small\"  color='grey' /> </span> : <CodeIcon />}\r\n\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder={Otpload ? 'Resending Code...' : \"Code\"}\r\n                        required\r\n                        name=\"Code\"\r\n                        disabled={Otpload ? true : false}\r\n                        value={registerdata.Code}\r\n                        onChange={registerdatachange}\r\n                      />\r\n                    </div>\r\n                    {!Otpload &&\r\n                      <input\r\n                      className=\"resendcode\"\r\n                        type=\"button\"\r\n                        name=\"ResendCode\"\r\n                        value=\"Resend Code\"\r\n                        onClick={registerotpbtn}\r\n                      />\r\n                    }\r\n                    \r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={dialogtoggle}\r\n                      className=\"signUpBtn\"\r\n                      color=\"primary\"\r\n                        disabled={Otpload ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={(e) => {\r\n                        if (registerdata.Code.length === 6) {\r\n                          registerbtn(e);\r\n                        } else {\r\n                          alert.error(\"Enter A Valid Code\");\r\n                        }\r\n                      }}\r\n                      className=\"signUpBtn\"\r\n                      color=\"secondary\"\r\n                        disabled={Otpload ? true : false}\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                  </DialogActions>\r\n                  {/* </>} */}\r\n                </Dialog>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login_Register;\r\n"],"names":["title","className","alert","useAlert","dispatch","useDispatch","useSelector","state","user","loading","error","isAuthenticated","otp","Otpload","Otperror","CodeSent","history","useHistory","loginTab","useRef","registerTab","switcherTab","switchTabs","e","tab","setmetadata","current","classList","add","remove","useState","metadata","Email","Password","logindata","setlogindata","logindatachange","target","name","value","Name","CPassword","Avatar","Code","registerdata","setregisterdata","registerdatachange","reader","FileReader","readAsDataURL","files","onload","readyState","result","open","setOpen","dialogtoggle","registerotpbtn","preventDefault","registeruserotpaction","useEffect","redirect","window","location","search","split","clearErrors","push","Metadata","Loading","onClick","ref","onSubmit","loginuseraction","success","MailOutline","type","placeholder","required","onChange","LockOpen","Link","to","Button","color","variant","encType","Face","disabled","id","src","alt","accept","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","size","DialogActions","length","registeruseraction","registerbtn"],"sourceRoot":""}