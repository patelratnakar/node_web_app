{"version":3,"file":"static/js/965.412b8954.chunk.js","mappings":"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","sources":["Actions/productaction.js","Components/Admin/NewProduct.js","Components/Admin/Sidebar.js","Components/Layout/Metadata.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCT_FAIL,\r\n  ALL_PRODUCT_REQUEST,\r\n  ALL_PRODUCT_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_FAIL,\r\n  ALL_REVIEW_REQUEST,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../Constants/productconstants\";\r\n\r\n// All Products\r\nexport const getallproducts =\r\n  (keyword = \"\", currentPage = 1, price = [0, 200000], category, ratings = 0) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCT_REQUEST });\r\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&Price[gte]=${price[0]}&Price[lte]=${price[1]}&Ratings[gte]=${ratings}`;\r\n      \r\n      if (category) {\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&Price[gte]=${price[0]}&Price[lte]=${price[1]}&Category=${category}&Ratings[gte]=${ratings}`;\r\n      }\r\n      const { data } = await axios.get(link);\r\n      // console.log(data)\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n// Product Details\r\nexport const getproductdetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/product/${id}`);\r\n    // console.log(data)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// NEW REVIEW\r\nexport const newReview = (id, reviewData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    const { data } = await axios.put(`/api/v1/product/${id}/review`, reviewData, config);\r\n\r\n    dispatch({\r\n      type: NEW_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Reviews of a Product\r\nexport const getAllReviews = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\r\n\r\n    dispatch({\r\n      type: ALL_REVIEW_SUCCESS,\r\n      payload: data.reviews,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Review of a Product\r\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/v1/reviews?id=${reviewId}&productId=${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Get All Products For Admin\r\nexport const getAdminProduct = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ADMIN_PRODUCT_REQUEST });\r\n  \r\n      const { data } = await axios.get(\"/api/v1/admin/products\");\r\n      // console.log(data)\r\n  \r\n      dispatch({\r\n        type: ADMIN_PRODUCT_SUCCESS,\r\n        payload: data.products,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ADMIN_PRODUCT_FAIL,\r\n        payload: 'error.response.data.message',\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Create Product\r\n  export const createProduct = (productData) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: NEW_PRODUCT_REQUEST });\r\n  \r\n      const config = {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/v1/admin/product/new`,\r\n        productData,\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: NEW_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: NEW_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Update Product\r\n  export const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n  \r\n      const config = {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/v1/admin/product/${id}`,\r\n        productData,\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: UPDATE_PRODUCT_SUCCESS,\r\n        payload: data.success,\r\n      });\r\n    } catch (error) {\r\n      // console.log(error.response)\r\n      dispatch({\r\n        type: UPDATE_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Delete Product\r\n  export const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n  \r\n      const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\r\n  \r\n      dispatch({\r\n        type: DELETE_PRODUCT_SUCCESS,\r\n        payload: data.success,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport \"./NewProduct.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, createProduct } from \"../../Actions/productaction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../Layout/Metadata\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { NEW_PRODUCT_RESET } from \"../../Constants/productconstants\";\r\n\r\nconst NewProduct = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, success } = useSelector((state) => state.newProduct);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [Stock, setStock] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const categories = [\r\n    \"Laptop\",\r\n    \"Footwear\",\r\n    \"Bottom\",\r\n    \"Tops\",\r\n    \"Attire\",\r\n    \"Camera\",\r\n    \"SmartPhones\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Product Created Successfully\");\r\n      history.push(\"/admin/dashboard\");\r\n      dispatch({ type: NEW_PRODUCT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history, success]);\r\n\r\n  const createProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = {\r\n      Name: name,\r\n      Price: price,\r\n      Description: description,\r\n      Category: category,\r\n      Stock: Stock,\r\n    };\r\n      myForm.Images = images\r\n      // console.log(myForm)\r\n    dispatch(createProduct(myForm));\r\n  };\r\n\r\n  const createProductImagesChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    setImages([]);\r\n    setImagesPreview([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((old) => [...old, reader.result]);\r\n          setImages((old) => [...old, reader.result]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Create Product\" />\r\n      <div className=\"dashboard\">\r\n        <SideBar />\r\n        <div className=\"newProductContainer\">\r\n          <form\r\n            className=\"createProductForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={createProductSubmitHandler}\r\n          >\r\n            <h1>Create Product</h1>\r\n\r\n            <div>\r\n              <SpellcheckIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Product Name\"\r\n                required\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <AttachMoneyIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Price\"\r\n                required\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <DescriptionIcon />\r\n\r\n              <textarea\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                cols=\"30\"\r\n                rows=\"1\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div>\r\n              <AccountTreeIcon />\r\n              <select onChange={(e) => setCategory(e.target.value)}>\r\n                <option value=\"\">Choose Category</option>\r\n                {categories.map((cate) => (\r\n                  <option key={cate} value={cate}>\r\n                    {cate}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <StorageIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Stock\"\r\n                required\r\n                onChange={(e) => setStock(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormFile\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                onChange={createProductImagesChange}\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormImage\">\r\n              {imagesPreview.map((image, index) => (\r\n                <img key={index} src={image} alt=\"Product Preview\" />\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              id=\"createProductBtn\"\r\n              type=\"submit\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Create\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import \"./sidebar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nconst logo = \"https://ik.imagekit.io/shera/Images/tr:w-200,f-auto/logo.png\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Ecommerce\" />\r\n      </Link>\r\n      <Link to=\"/admin/dashboard\">\r\n        <p>\r\n          <DashboardIcon /> Dashboard\r\n        </p>\r\n      </Link>\r\n      <Link>\r\n        <TreeView\r\n          defaultCollapseIcon={<ExpandMoreIcon />}\r\n          defaultExpandIcon={<ImportExportIcon />}\r\n        >\r\n          <TreeItem nodeId=\"1\" label=\"Products\">\r\n            <Link to=\"/admin/products\">\r\n              <TreeItem nodeId=\"2\" label=\"All\" icon={<PostAddIcon />} />\r\n            </Link>\r\n\r\n            <Link to=\"/admin/product/new\">\r\n              <TreeItem nodeId=\"3\" label=\"Create\" icon={<AddIcon />} />\r\n            </Link>\r\n          </TreeItem>\r\n        </TreeView>\r\n      </Link>\r\n      <Link to=\"/admin/orders\">\r\n        <p>\r\n          <ListAltIcon />\r\n          Orders\r\n        </p>\r\n      </Link>\r\n      <Link to=\"/admin/users\">\r\n        <p>\r\n          <PeopleIcon /> Users\r\n        </p>\r\n      </Link>\r\n      <Link to=\"/admin/reviews\">\r\n        <p>\r\n          <RateReviewIcon />\r\n          Reviews\r\n        </p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import Helmet from 'react-helmet'\r\n\r\nconst Metadata = ({title}) => {\r\n  return (<>\r\n      <Helmet>\r\n          <title>{title}</title>\r\n      </Helmet>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Metadata"],"names":["getallproducts","keyword","currentPage","price","category","ratings","dispatch","type","ALL_PRODUCT_REQUEST","link","axios","data","ALL_PRODUCT_SUCCESS","payload","ALL_PRODUCT_FAIL","response","message","getproductdetails","id","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","product","PRODUCT_DETAILS_FAIL","newReview","reviewData","NEW_REVIEW_REQUEST","config","headers","NEW_REVIEW_SUCCESS","success","NEW_REVIEW_FAIL","getAllReviews","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","reviews","ALL_REVIEW_FAIL","deleteReviews","reviewId","productId","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","getAdminProduct","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","products","ADMIN_PRODUCT_FAIL","createProduct","productData","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","updateProduct","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","deleteProduct","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","clearErrors","CLEAR_ERRORS","history","useDispatch","alert","useAlert","useSelector","state","newProduct","loading","error","useState","name","setName","setPrice","description","setDescription","setCategory","Stock","setStock","images","setImages","imagesPreview","setImagesPreview","useEffect","push","NEW_PRODUCT_RESET","Fragment","title","className","encType","onSubmit","e","preventDefault","myForm","Name","Price","Description","Category","Images","placeholder","required","value","onChange","target","cols","rows","map","cate","accept","files","Array","from","forEach","file","reader","FileReader","onload","readyState","old","result","readAsDataURL","multiple","image","index","src","alt","disabled","Link","to","Dashboard","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ImportExport","TreeItem","nodeId","label","icon","PostAdd","Add","ListAlt","People","RateReview"],"sourceRoot":""}